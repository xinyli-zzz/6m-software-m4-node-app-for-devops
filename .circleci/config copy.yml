version: 2.1
# orbs - reusable packages for use 
# in yml files, tabs are important, so must align and tab properly
orbs: 
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  # heroku: circleci/heroku@2.0.0 
  snyk: snyk/snyk@1.5.0  #compare the node and docker orbs, the snyk orb starts
# jobs - set of instructions / functions 
jobs: 
  build: #job name 
    docker: #environment
      - image: cimg/node:16.10
    steps: 
      - checkout 
      - node/install-packages: 
          pkg-manager: npm 
      - run: |
          echo "Installing dependencies..."
          npm install 
  
  test: 
    docker: 
      - image: cimg/node:16.10
    steps: 
      - checkout
      - node/install-packages: 
          pkg-manager: npm 
      - run: |
          echo "Running tests..."
          npm run test
  
  publish:  #just a naming convention, also known as build-and-push
    executor: docker/docker #define the execution environment in which the steps of a job will run
    steps: 
      - setup_remote_docker
      - checkout
      - docker/check 
      - docker/build: #build the image 
          image: xinyu98/education-space
          tags: v1.0.1
      - docker/push: 
          image: xinyu98/education-space
          tags: v1.0.1
  deploy:  #pushes code to heroku and release, then can access the link (open app) and see the result 
    docker: 
      - image: cimg/node:16.10
    steps: 
      - setup_remote_docker
      - heroku/install
      - checkout 
      - run: 
          name: Heroku Container Push
          command: |
          heroku container:login
          heroku container: push web -a terence-su-devops
          heroku container: release web -a terence-su-devops
  scan: 
    docker: 
      - image: cimg/node:16.20
    environment: #the env allows us to creat an env for the job and allows us to create custom env variables 
      IMAGE_NAME: xinyu98/education-space 
    steps: 
      - checkout 
      - setup_remote_docker 
      - docker/check 
      - run: docker build -t $IMAGE_NAME  . #$_IMAGE_NAME gets the valie from the env we created above
      - snyk/scan: 
          docker-image-name: $IMAGE_NAME 
          



# workflow - defines what sequence the jobs will run
workflows: 
  simple_workflow: #workflow name 
    jobs: 
      - build #Step 1 
      - test:  #Step 2
          requires: 
            - build #test has a requirement that build must finish before we can go to the build job 
      - publish: 
          requires: 
            - test #publish requires test to finish 
      - deploy:
          requires: 
            - publish 
